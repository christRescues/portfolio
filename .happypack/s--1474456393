'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _container;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _d = require('d3');

var d3 = _interopRequireWildcard(_d);

var _countries = require('./countries.json');

var _countries2 = _interopRequireDefault(_countries);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var color1 = '#B3FFAB',
    color2 = '#12FFF7';

var styles = {
    container: (_container = {
        display: 'flex',
        justifyContent: 'center',
        background: color1
    }, _defineProperty(_container, 'background', 'webkit-linear-gradient(to left, ' + color1 + ' , ' + color2 + ')'), _defineProperty(_container, 'background', 'linear-gradient(to left, ' + color1 + ' , ' + color2 + ')'), _container)
};

var Graph = function (_Component) {
    _inherits(Graph, _Component);

    function Graph() {
        _classCallCheck(this, Graph);

        return _possibleConstructorReturn(this, (Graph.__proto__ || Object.getPrototypeOf(Graph)).apply(this, arguments));
    }

    _createClass(Graph, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            var svg = d3.select("svg"),
                width = +svg.attr("width"),
                height = +svg.attr("height"),
                color = 'blue',
                radius = 15;

            var simulation = d3.forceSimulation().force("link", d3.forceLink().id(function (d) {
                return d.index;
            })).force('charge', d3.forceManyBody().strength(-5)).force('collide', d3.forceCollide(radius + 2).strength(.5)).force("center", d3.forceCenter(width / 2, height / 2));

            var link = svg.append("g").attr("class", "links").selectAll("line").data(_countries2.default.links).enter().append("line").attr("stroke-width", 1).style('stroke', '#999').style('stroke-opacity', 0.6);

            var node = svg.selectAll(".flag").data(_countries2.default.nodes).enter().append("image").attr("xlink:href", function (d) {
                return require('./flag/' + d.code + '.png');
            }).attr("width", radius).attr("height", radius).attr("x", -5).attr("y", -8).call(d3.drag().on("start", dragstarted).on("drag", dragged).on("end", dragended));

            node.append("title").text(function (d) {
                return d.id;
            });

            simulation.nodes(_countries2.default.nodes).on("tick", ticked);

            simulation.force("link").links(_countries2.default.links);

            function ticked() {
                link.attr("x1", function (d) {
                    return d.source.x;
                }).attr("y1", function (d) {
                    return d.source.y;
                }).attr("x2", function (d) {
                    return d.target.x;
                }).attr("y2", function (d) {
                    return d.target.y;
                });

                node.attr("cx", function (d) {
                    return d.x = Math.max(radius, Math.min(width - radius, d.x));
                }).attr("cy", function (d) {
                    return d.y = Math.max(radius, Math.min(height - radius, d.y));
                }).attr("transform", function (d) {
                    return "translate(" + d.x + "," + d.y + ")";
                });
            }

            function dragstarted(d) {
                if (!d3.event.active) simulation.alphaTarget(0.3).restart();
                d.fx = d.x;
                d.fy = d.y;
            }

            function dragged(d) {
                d.fx = d3.event.x;
                d.fy = d3.event.y;
            }

            function dragended(d) {
                if (!d3.event.active) simulation.alphaTarget(0);
                d.fx = null;
                d.fy = null;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _jsx('div', {}, void 0, _jsx('svg', {
                className: 'animated lightSpeedIn',
                id: 'forceGraph',
                style: styles.container,
                width: '800',
                height: '500'
            }, void 0));
        }
    }]);

    return Graph;
}(_react.Component);

exports.default = Graph = (0, _radium2.default)(Graph);