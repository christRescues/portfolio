{"version":3,"sources":["src/store/configure.js"],"names":["isBrowser","isDev","applyMiddleware","compose","createStore","createSagaMiddleware","rootReducer","sagas","devtools","window","devToolsExtension","fn","configureStore","initialState","services","sagaMiddleware","enhancers","store","sagaTask","run","module","hot","accept","nextReducer","require","default","replaceReducer","nextSagas","cancel","done","then"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;AAEA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,WACJP,SAASD,SAAT,IAAsBS,OAAOC,iBAA7B,GACID,OAAOC,iBADX,GAEI;AAAA,SAAM;AAAA,WAAMC,EAAN;AAAA,GAAN;AAAA,CAHN;;AAKA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,YAAD,EAAiC;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;;AACtD,MAAMC,iBAAiBV,sBAAvB;;AAEA,MAAMW,YAAY,CAACd,gBAAgBa,cAAhB,CAAD,EAAkCP,UAAlC,CAAlB;;AAEA,MAAMS,QAAQb,YAAYE,WAAZ,EAAyBO,YAAzB,EAAuCV,yBAAWa,SAAX,CAAvC,CAAd;;AAEA,MAAIE,WAAWH,eAAeI,GAAf,CAAmBZ,KAAnB,EAA0BO,QAA1B,CAAf;;AAEA,MAAIM,OAAOC,GAAX,EAAgB;AACdD,WAAOC,GAAP,CAAWC,MAAX,CAAkB,WAAlB,EAA+B,YAAM;AACnC,UAAMC,cAAcC,QAAQ,WAAR,EAAqBC,OAAzC;AACAR,YAAMS,cAAN,CAAqBH,WAArB;AACD,KAHD;AAIAH,WAAOC,GAAP,CAAWC,MAAX,CAAkB,SAAlB,EAA6B,YAAM;AACjC,UAAMK,YAAYH,QAAQ,SAAR,EAAmBC,OAArC;AACAP,eAASU,MAAT;AACAV,eAASW,IAAT,CAAcC,IAAd,CAAmB,YAAM;AACvBZ,mBAAWH,eAAeI,GAAf,CAAmBQ,SAAnB,EAA8Bb,QAA9B,CAAX;AACD,OAFD;AAGD,KAND;AAOD;;AAED,SAAOG,KAAP;AACD,CAxBD;;eA0BeL,c;AAAf;;;;;;;;gCA/BMJ,Q;;gCAKAI,c","file":"configure.js","sourceRoot":"/home/ryan/dev/port","sourcesContent":["import { isBrowser, isDev } from 'config'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './reducer'\nimport sagas from './sagas'\n\nconst devtools =\n  isDev && isBrowser && window.devToolsExtension\n    ? window.devToolsExtension\n    : () => fn => fn\n\nconst configureStore = (initialState, services = {}) => {\n  const sagaMiddleware = createSagaMiddleware()\n\n  const enhancers = [applyMiddleware(sagaMiddleware), devtools()]\n\n  const store = createStore(rootReducer, initialState, compose(...enhancers))\n\n  let sagaTask = sagaMiddleware.run(sagas, services)\n\n  if (module.hot) {\n    module.hot.accept('./reducer', () => {\n      const nextReducer = require('./reducer').default\n      store.replaceReducer(nextReducer)\n    })\n    module.hot.accept('./sagas', () => {\n      const nextSagas = require('./sagas').default\n      sagaTask.cancel()\n      sagaTask.done.then(() => {\n        sagaTask = sagaMiddleware.run(nextSagas, services)\n      })\n    })\n  }\n\n  return store\n}\n\nexport default configureStore\n"]}