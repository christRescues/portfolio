{"version":3,"sources":["src/components/molecules/IconLink/index.js"],"names":["Icon","Link","PropTypes","React","styled","fontSize","height","margin","hasText","right","StyledIcon","responsive","Text","span","IconLink","icon","children","props","iconElement","palette","reverse","propTypes","string","isRequired","number","bool","node"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,IAAMC,WAAW,SAAXA,QAAW;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,SAAiBA,SAAYA,SAAS,CAAT,GAAa,EAAzB,WAAmC,QAApD;AAAA,CAAjB;;AAEA,IAAMC,SAAS,SAATA,MAAS,QAAwB;AAAA,MAArBC,OAAqB,SAArBA,OAAqB;AAAA,MAAZC,KAAY,SAAZA,KAAY;;AACrC,MAAID,OAAJ,EAAa;AACX,WAAOC,QAAQ,cAAR,GAAyB,cAAhC;AACD;AACD,SAAO,CAAP;AACD,CALD;;AAOA,IAAMC,aAAaN,OAAOJ,IAAP,CAAb;AAAA;AAAA,qFACSK,QADT,EAEME,MAFN,EAIQ;AAAA,MAAGI,UAAH,SAAGA,UAAH;AAAA,SAAoBA,cAAc,CAAlC;AAAA,CAJR,CAAN;;AAQA,IAAMC,OAAOR,OAAOS,IAAd;AAAA;AAAA,2DAES;AAAA,MAAGF,UAAH,SAAGA,UAAH;AAAA,SAAoBA,cAAc,MAAlC;AAAA,CAFT,CAAN;;AAMA,IAAMG,WAAW,SAAXA,QAAW,QAA6D;AAAA,MAA1DR,MAA0D,SAA1DA,MAA0D;AAAA,MAAlDS,IAAkD,SAAlDA,IAAkD;AAAA,MAA5CN,KAA4C,SAA5CA,KAA4C;AAAA,MAArCE,UAAqC,SAArCA,UAAqC;AAAA,MAAzBK,QAAyB,SAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC5E,MAAMC,cACJ,oBAAC,UAAD;AACE,YAAQZ,MADV;AAEE,UAAMS,IAFR;AAGE,aAAS,CAAC,CAACC,QAHb;AAIE,WAAOP,KAJT;AAKE,gBAAYE,UALd;AAME,aAASM,MAAME,OANjB;AAOE,aAASF,MAAMG;AAPjB,IADF;AAWA,SACE;AAAC,QAAD;AAAUH,SAAV;AACGR,aAASS,WADZ;AAEE;AAAC,UAAD;AAAA,QAAM,YAAYP,UAAlB;AAA+BK;AAA/B,KAFF;AAGGP,aAASS;AAHZ,GADF;AAOD,CAnBD;;AAqBAJ,SAASO,SAAT,GAAqB;AACnBN,QAAMb,UAAUoB,MAAV,CAAiBC,UADJ;AAEnBjB,UAAQJ,UAAUsB,MAFC;AAGnBL,WAASjB,UAAUoB,MAHA;AAInBF,WAASlB,UAAUuB,IAJA;AAKnBd,cAAYT,UAAUuB,IALH;AAMnBhB,SAAOP,UAAUuB,IANE;AAOnBT,YAAUd,UAAUwB;AAPD,CAArB;;eAUeZ,Q;AAAf;;;;;;;;gCAtDMT,Q;;gCAEAE,M;;gCAOAG,U;;gCAQAE,I;;gCAMAE,Q","file":"index.js","sourceRoot":"/home/ryan/dev/port","sourcesContent":["import { Icon, Link } from 'components/atoms'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst fontSize = ({ height }) => (height ? `${height / 3 / 16}rem` : '0.75em')\n\nconst margin = ({ hasText, right }) => {\n  if (hasText) {\n    return right ? '0 0 0 0.25em' : '0 0.25em 0 0'\n  }\n  return 0\n}\n\nconst StyledIcon = styled(Icon)`\n  font-size: ${fontSize};\n  margin: ${margin};\n  @media screen and (max-width: 420px) {\n    margin: ${({ responsive }) => responsive && 0};\n  }\n`\n\nconst Text = styled.span`\n  @media screen and (max-width: 420px) {\n    display: ${({ responsive }) => responsive && 'none'};\n  }\n`\n\nconst IconLink = ({ height, icon, right, responsive, children, ...props }) => {\n  const iconElement = (\n    <StyledIcon\n      height={height}\n      icon={icon}\n      hasText={!!children}\n      right={right}\n      responsive={responsive}\n      palette={props.palette}\n      reverse={props.reverse}\n    />\n  )\n  return (\n    <Link {...props}>\n      {right || iconElement}\n      <Text responsive={responsive}>{children}</Text>\n      {right && iconElement}\n    </Link>\n  )\n}\n\nIconLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  height: PropTypes.number,\n  palette: PropTypes.string,\n  reverse: PropTypes.bool,\n  responsive: PropTypes.bool,\n  right: PropTypes.bool,\n  children: PropTypes.node,\n}\n\nexport default IconLink\n"]}