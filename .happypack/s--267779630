var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

import React from 'react';
import { Provider } from 'react-redux';
import { createStore, applyMiddleware } from 'redux';
import { BrowserRouter as Router, Route } from 'react-router-dom';

import reducers from './reducers';
import Routes from './routes';
import promise from 'redux-promise';

import './css/global.css';
import './css/ihover.css';

import Header from './components/Main/Header';
import Footer from './components/Main/Footer';

var store = createStore(reducers, applyMiddleware(promise));

var _ref = _jsx('div', {}, void 0, _jsx(Provider, {
  store: store
}, void 0, _jsx(Router, {
  basename: '/'
}, void 0, _jsx(Routes, {}))));

var App = function App() {
  return _ref;
};

export default App;