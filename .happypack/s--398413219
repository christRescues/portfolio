var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

import React from 'react';
import Radium from 'radium';

var styles = {
  text: {
    fontFamily: "'Press Start 2P', 'cursive'",
    lineHeight: '50px',
    fontSize: '1em',
    textAlign: 'center'
  },
  container: {
    background: 'grey',
    color: 'red',
    borderRadius: '20px',
    width: '150px',
    height: '50px',
    margin: '0 auto 10px auto'
  }
};

var Player = function Player(props) {
  var who = props.currentPlayer == props.humanPlayer ? 'You: ' : 'AI: ';
  return _jsx('div', {
    className: props.animate
  }, void 0, _jsx('h3', {
    style: styles.text
  }, void 0, 'Current Player:'), _jsx('div', {
    style: styles.container
  }, void 0, _jsx('h4', {
    style: styles.text
  }, void 0, who, props.currentPlayer)));
};

export default Player = Radium(Player);