{"version":3,"sources":["src/components/molecules/IconButton/index.js"],"names":["Button","Icon","PropTypes","React","styled","css","keyframes","ifProp","prop","fadeIn","StyledButton","props","hasText","collapsed","Text","span","Wrapper","div","StyledIcon","IconButton","icon","children","breakpoint","right","responsive","height","iconElement","propTypes","string","isRequired","bool","number","node","defaultProps"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,mBAAvC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,cAA7B;;AAEA,IAAMC,SAASH,SAAT,2FAAN;;AAMA,IAAMI,eAAeN,OAAOJ,MAAP,CAAf;AAAA;AAAA,+FACS;AAAA,SAAUW,MAAMC,OAAN,IAAiB,CAACD,MAAME,SAAxB,GAAoC,MAApC,GAA6C,OAAvD;AAAA,CADT,EAEKN,OAAO,SAAP,EAAkB,MAAlB,EAA0B,OAA1B,CAFL,EAGOA,OAAO,SAAP,EAAkB,YAAlB,EAAgC,CAAhC,CAHP,EAMFA,OACA,WADA,EAEAF,GAFA,8KAamBI,MAbnB,EANE,EAuBCF,OACD,YADC,EAEDF,GAFC,0EAGiCG,KAAK,YAAL,CAHjC,EAvBD,CAAN;;AAkCA,IAAMM,OAAOV,OAAOW,IAAd;AAAA;AAAA,6EAE4BP,KAAK,YAAL,CAF5B,EAGSD,OAAO,YAAP,EAAqB,iBAArB,CAHT,CAAN;;AAOA,IAAMS,UAAUZ,OAAOa,GAAjB;AAAA;AAAA,sFAAN;;AAQA,IAAMC,aAAad,OAAOH,IAAP,CAAb;AAAA;AAAA,kBAAN;;AAIA,IAAMkB,aAAa,SAAbA,UAAa,OAAkC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZV,KAAY;;AAAA,MAC3CW,UAD2C,GACDX,KADC,CAC3CW,UAD2C;AAAA,MAC/BC,KAD+B,GACDZ,KADC,CAC/BY,KAD+B;AAAA,MACxBC,UADwB,GACDb,KADC,CACxBa,UADwB;AAAA,MACZC,MADY,GACDd,KADC,CACZc,MADY;;AAEnD,MAAMC,cAAc,oBAAC,UAAD,IAAY,QAAQD,SAAS,GAA7B,EAAkC,MAAML,IAAxC,GAApB;AACA,SACE;AAAC,gBAAD;AAAA,eAAc,SAAS,CAAC,CAACC,QAAzB,IAAuCV,KAAvC;AACE;AAAC,aAAD;AAAA;AACGY,eAASG,WADZ;AAEGL,kBACC;AAAC,YAAD;AAAA;AACE,qBAAU,MADZ;AAEE,sBAAYG,UAFd;AAGE,sBAAYF;AAHd;AAKGD;AALH,OAHJ;AAWGE,eAASG;AAXZ;AADF,GADF;AAiBD,CApBD;;AAsBAP,WAAWQ,SAAX,GAAuB;AACrBP,QAAMlB,UAAU0B,MAAV,CAAiBC,UADF;AAErBL,cAAYtB,UAAU4B,IAFD;AAGrBR,cAAYpB,UAAU6B,MAHD;AAIrBlB,aAAWX,UAAU4B,IAJA;AAKrBP,SAAOrB,UAAU4B,IALI;AAMrBL,UAAQvB,UAAU6B,MANG;AAOrBV,YAAUnB,UAAU8B;AAPC,CAAvB;;AAUAb,WAAWc,YAAX,GAA0B;AACxBX,cAAY;AADY,CAA1B;;eAIeH,U;AAAf;;;;;;;;gCA/FMV,M;;gCAMAC,Y;;gCAkCAI,I;;gCAOAE,O;;gCAQAE,U;;gCAIAC,U","file":"index.js","sourceRoot":"/home/ryan/dev/port","sourcesContent":["import { Button, Icon } from 'components/atoms'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { ifProp, prop } from 'styled-tools'\n\nconst fadeIn = keyframes`\n  0% { display: none; opacity: 0; }\n  1% { display: block: opacity: 0; }\n  100% { display: block; opacity: 1; }\n`\n\nconst StyledButton = styled(Button)`\n  max-width: ${props => (props.hasText && !props.collapsed ? '100%' : '2.5em')};\n  width: ${ifProp('hasText', 'auto', '2.5em')};\n  padding: ${ifProp('hasText', '0 0.4375em', 0)};\n  flex: 0 0 2.5em;\n  box-sizing: border-box;\n  ${ifProp(\n    'collapsed',\n    css`\n      overflow: hidden;\n      transition: max-width 250ms ease-in-out;\n      will-change: max-width;\n      & .text {\n        display: none;\n      }\n      &:hover {\n        max-width: 100%;\n        & .text {\n          display: block;\n          animation: ${fadeIn} 250ms;\n        }\n      }\n    `,\n  )} ${ifProp(\n      'responsive',\n      css`\n        @media screen and (max-width: ${prop('breakpoint')}px) {\n          width: auto;\n          flex: 0 !important;\n        }\n      `,\n    )};\n`\n\nconst Text = styled.span`\n  padding: 0.4375em;\n  @media screen and (max-width: ${prop('breakpoint')}px) {\n    display: ${ifProp('responsive', 'none !important')};\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`\n\nconst StyledIcon = styled(Icon)`\n  flex: none;\n`\n\nconst IconButton = ({ icon, children, ...props }) => {\n  const { breakpoint, right, responsive, height } = props\n  const iconElement = <StyledIcon height={height / 2.5} icon={icon} />\n  return (\n    <StyledButton hasText={!!children} {...props}>\n      <Wrapper>\n        {right || iconElement}\n        {children && (\n          <Text\n            className=\"text\"\n            responsive={responsive}\n            breakpoint={breakpoint}\n          >\n            {children}\n          </Text>\n        )}\n        {right && iconElement}\n      </Wrapper>\n    </StyledButton>\n  )\n}\n\nIconButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  responsive: PropTypes.bool,\n  breakpoint: PropTypes.number,\n  collapsed: PropTypes.bool,\n  right: PropTypes.bool,\n  height: PropTypes.number,\n  children: PropTypes.node,\n}\n\nIconButton.defaultProps = {\n  breakpoint: 420,\n}\n\nexport default IconButton\n"]}