var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

import React from 'react';
import Radium from 'radium';
import Header from './Header';
import Legend from './Legend';
import Chart from './Chart';
import data from './heatData';

import './style.css';

var styles = {
  container: {
    marginTop: '100px',
    marginBottom: '150px',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center'
  }
};

var _ref = _jsx(Header, {});

var _ref2 = _jsx(Legend, {});

var Heatmap = function Heatmap() {
  return _jsx('div', {
    style: styles.container
  }, void 0, _ref, _ref2, _jsx(Chart, {
    wide: 500,
    tall: 500,
    baseTemp: data.baseTemperature,
    data: data.monthlyVariance
  }));
};

export default Heatmap = Radium(Heatmap);