'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles = {
  container: {
    background: '#3b3e42',
    color: 'white',
    borderRadius: '10px',
    padding: '5px'
  }
};

var CustomTip = function CustomTip(_ref) {
  var payload = _ref.payload;

  var Name = payload !== null ? payload[0].payload.Name : '';
  var Nationality = payload !== null ? payload[0].payload.Nationality : '';
  var URL = payload !== null ? payload[0].payload.URL : '';
  var Year = payload !== null ? payload[0].payload.Year : '';
  var TimeBehind = payload !== null ? payload[0].payload.TimeBehind : '';
  var Doping = payload !== null ? payload[0].payload.Doping : '';
  // console.log(payload)
  return _jsx('div', {
    className: 'custom-tooltip',
    style: styles.container
  }, void 0, _jsx('p', {
    className: 'desc'
  }, void 0, Name + ' | Nationality: ' + Nationality), _jsx('p', {
    className: 'desc'
  }, void 0, 'Year raced: ' + Year), _jsx('p', {
    className: 'desc'
  }, void 0, TimeBehind + ' seconds behind 1st place'), _jsx('p', {
    className: 'desc'
  }, void 0, Doping));
};

// App.propTypes = {
//   prop: React.PropTypes.func.isRequired,
// }

exports.default = CustomTip = (0, _radium2.default)(CustomTip);