var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

import React from 'react';
import Radium, { StyleRoot } from 'radium';
var tomato = require('file-loader!./tomato.svg');

var styles = {
  container: {
    margin: '10px auto',
    textAlign: 'center',
    position: 'relative',
    width: '40%'
  },
  text: {
    position: 'absolute',
    width: '100%',
    top: '35%',
    fontFamily: '"Rock Salt", cursive',
    color: 'white',
    fontSize: '30px',
    '@media (max-width: 995px)': {
      fontSize: '25px'
    },
    '@media (max-width: 830px)': {
      fontSize: '20px'
    },
    '@media (max-width: 650px)': {
      fontSize: '15px'
    },
    '@media (max-width: 450px)': {
      fontSize: '10px'
    }
  }
};

var _ref2 = _jsx('br', {});

var _ref3 = _jsx('br', {});

var _ref4 = _jsx('div', {});

var Display = function Display(_ref) {
  var sessionTime = _ref.sessionTime,
      breakTime = _ref.breakTime,
      seconds = _ref.seconds,
      initialized = _ref.initialized,
      type = _ref.type;

  var display = initialized === 'yes' ? _jsx(StyleRoot, {}, void 0, _jsx('div', {
    style: styles.container
  }, void 0, _jsx('img', {
    src: require('./tomato.svg')
  }), _jsx('h2', {
    style: styles.text
  }, void 0, type, ' ', _ref2, _ref3, type === 'session' ? sessionTime : breakTime, ' m ', seconds, ' s'))) : _ref4;
  return _jsx('div', {}, void 0, display);
};

export default Display = Radium(Display);