'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _background;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _reactCollapse = require('react-collapse');

var _reactCollapse2 = _interopRequireDefault(_reactCollapse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var styles = {
  container: {
    margin: '0 auto 30px auto',
    textAlign: 'left'
  },
  pinterest: {
    fontFamily: "'Grand Hotel', cursive",
    color: 'black',
    fontSize: '3em',
    textAlign: 'left'
  },
  ingredientsContainer: {
    display: 'inline-block',
    margin: '10px 20px'
  },
  header: {
    lineHeight: '100%',
    color: 'white',
    fontSize: '2em',
    padding: '5px',
    marginTop: '10px',
    fontFamily: "'Coiny', cursive",
    cursor: 'pointer'
  },
  text: {
    textAlign: 'center'
  },
  link: {
    display: 'block',
    margin: '15px'
  },
  servings: {
    display: 'inline-block',
    margin: '15px',
    background: 'rgb(201, 34, 40)',
    borderRadius: '5px',
    padding: '5px',
    color: 'white'
  }
};

var color1 = '#B3FFAB';
var color2 = '#12FFF7';
var background = (_background = {
  background: color1
}, _defineProperty(_background, 'background', 'webkit-linear-gradient(to left, ' + color1 + ' , ' + color2 + ')'), _defineProperty(_background, 'background', 'linear-gradient(to left, ' + color1 + ' , ' + color2 + ')'), _background);

var _ref2 = _jsx('br', {});

var _ref3 = _jsx('div', {});

var PinterestRecipes = function PinterestRecipes(_ref) {
  var pins = _ref.pins,
      collapse = _ref.collapse,
      expand = _ref.expand;

  var clickHandler = function clickHandler(i) {
    pins[i]['expanded'] === false ? collapse(i, 'pint') : expand(i, 'pint');
  };
  var renderTitles = function renderTitles() {
    return _jsx('div', {
      style: styles.container
    }, void 0, _jsx('h4', {
      style: styles.pinterest
    }, void 0, 'Your Pinterest Recipes: '), pins.map(function (recipe, i) {
      var display = recipe.expanded;
      if (recipe.metadata.recipe) {
        return _jsx('div', {}, 'container' + recipe.id, _jsx('h4', {
          style: [styles.header, background],
          onClick: clickHandler.bind(undefined, i)
        }, 'header' + recipe.id, recipe.metadata.recipe.name + '...'), _jsx(_reactCollapse2.default, {
          isOpened: display
        }, 'collapse' + recipe.id, _jsx('a', {
          href: recipe.link,
          style: styles.link
        }, void 0, 'Click to view more info about this recipe'), _jsx('h5', {
          style: styles.servings
        }, void 0, 'Serves: ', recipe.metadata.recipe.servings.serves), _ref2, recipe.metadata.recipe.ingredients.map(function (ingredient) {
          return _jsx('div', {
            style: styles.ingredientsContainer
          }, 'container' + ingredient.category, _jsx('h5', {
            style: styles.text
          }, 'head' + ingredient.category, ingredient.category), _jsx('table', {
            className: 'table table-hover'
          }, 'table' + recipe.id, _jsx('tbody', {}, 'body' + recipe.id, ingredient.ingredients.map(function (info, i) {
            return _jsx('tr', {}, 'row' + i, _jsx('td', {}, 'amount' + info.name + recipe.id, info.amount, ' ', info.name));
          }))));
        })));
      } else {
        return '';
      }
    }));
  };
  var pinRecipes = pins.length >= 1 ? renderTitles() : _ref3;

  return pinRecipes;
};

exports.default = PinterestRecipes = (0, _radium2.default)(PinterestRecipes);


{/* <table
   className="table table-hover"
   key={'table' + recipe.id}
   id={'table' + recipe.id}
   >
   <thead key={'tablehead' + recipe.id}>
     <tr key={'tablerow' + recipe.id}>
       <th key={'measure' + recipe.id}>Measurements</th>
       <th key={'ingredient' + recipe.id}>Ingredients</th>
     </tr>
   </thead>
   <tbody key={'tablebody' + recipe.id}>
     {recipe.metadata.recipe.ingredients.map((ingredient, i) => {
       return (
         <tr
           key={'row' + i + recipe.id}
           className={i % 2 === 0 ? "table-info" : ""}>
           <td key={'measurements' + recipe.id}>
             {ingredient.category}
           </td>
           <td key={'ingredientname' + recipe.id}>
             {ingredient.category}
           </td>
         </tr>
       )
     })}
   </tbody>
  </table> */}