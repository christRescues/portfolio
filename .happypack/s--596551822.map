{"version":3,"sources":["src/components/atoms/Link/index.js"],"names":["PropTypes","React","RouterLink","styled","css","font","palette","styles","grayscale","StyledLink","theme","reverse","props","Anchor","a","Link","to","propTypes","string","bool","defaultProps"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,cAA9B;;AAEA,IAAMC,SAASH,GAAT,2GACWC,KAAK,SAAL,CADX,EAIKC,QAAQ,EAAEE,WAAW,CAAb,EAAR,EAA0B,CAA1B,CAJL,CAAN;;AAWA,IAAMC,aAAaN,OAAO;AAAA,MAAGO,KAAH,QAAGA,KAAH;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,MAAmBL,OAAnB,QAAmBA,OAAnB;AAAA,MAA+BM,KAA/B;;AAAA,SACxB,oBAAC,UAAD,EAAgBA,KAAhB,CADwB;AAAA,CAAP,CAAb;AAAA;AAAA,cAGFL,MAHE,CAAN;AAKA,IAAMM,SAASV,OAAOW,CAAhB;AAAA;AAAA,cACFP,MADE,CAAN;;AAIA,IAAMQ,OAAO,SAAPA,IAAO,QAAkB;AAAA,MAAZH,KAAY;;AAC7B,MAAIA,MAAMI,EAAV,EAAc;AACZ,WAAO,oBAAC,UAAD,EAAgBJ,KAAhB,CAAP;AACD;AACD,SAAO,oBAAC,MAAD,EAAYA,KAAZ,CAAP;AACD,CALD;;AAOAG,KAAKE,SAAL,GAAiB;AACfX,WAASN,UAAUkB,MADJ;AAEfP,WAASX,UAAUmB,IAFJ;AAGfH,MAAIhB,UAAUkB;AAHC,CAAjB;;AAMAH,KAAKK,YAAL,GAAoB;AAClBd,WAAS;AADS,CAApB;;eAIeS,I;AAAf;;;;;;;;gCArCMR,M;;gCAWAE,U;;gCAKAI,M;;gCAIAE,I","file":"index.js","sourceRoot":"/home/ryan/dev/port","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport RouterLink from 'react-router-dom/NavLink'\nimport styled, { css } from 'styled-components'\nimport { font, palette } from 'styled-theme'\n\nconst styles = css`\n  font-family: ${font('primary')};\n  text-decoration: none;\n  font-weight: 500;\n  color: ${palette({ grayscale: 0 }, 1)};\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst StyledLink = styled(({ theme, reverse, palette, ...props }) => (\n  <RouterLink {...props} />\n))`\n  ${styles};\n`\nconst Anchor = styled.a`\n  ${styles};\n`\n\nconst Link = ({ ...props }) => {\n  if (props.to) {\n    return <StyledLink {...props} />\n  }\n  return <Anchor {...props} />\n}\n\nLink.propTypes = {\n  palette: PropTypes.string,\n  reverse: PropTypes.bool,\n  to: PropTypes.string,\n}\n\nLink.defaultProps = {\n  palette: 'primary',\n}\n\nexport default Link\n"]}