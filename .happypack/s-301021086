var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

import React from 'react';
import Radium from 'radium';

var styles = {
  container: {
    marginBottom: '20px',
    display: 'flex',
    justifyContent: 'center'
  },
  bucketCtn: {
    display: 'inline-block',
    margin: '7px',
    fontSize: '10px',
    textAlign: 'center'
  }
};

var Legend = function Legend() {
  var colors = ['#7caaff', '#e2f293', '#f7ff89', '#e5db27', '#ce5c0a', '#c41717', '#911414'],
      legend = ['-7', '-2.5', '-0.5', '0', '0.5', '2.5', '7'];
  var renderLegend = function renderLegend() {
    return _jsx('div', {
      className: 'animated bounceInLeft'
    }, void 0, legend.map(function (num, i) {
      if (i === 6) {
        return _jsx('div', {
          style: styles.bucketCtn
        }, void 0, _jsx('div', {}, void 0, '> ' + num), _jsx('div', {
          style: { background: colors[i], width: 50, height: 25 }
        }));
      } else {
        return _jsx('div', {
          style: styles.bucketCtn
        }, void 0, _jsx('div', {}, void 0, num + ' to ' + legend[i + 1]), _jsx('div', {
          style: { background: colors[i], width: 50, height: 25 }
        }));
      }
    }));
  };
  return _jsx('div', {
    style: styles.container
  }, void 0, renderLegend());
};

// App.propTypes = {
//   prop: React.PropTypes.func.isRequired,
// }

export default Legend = Radium(Legend);