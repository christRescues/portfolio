var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _background,
    _this = this;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import Radium from 'radium';
import Collapse from 'react-collapse';
import EditRecipe from './EditRecipe';

var styles = {
  container: {
    margin: '0 auto',
    textAlign: 'center'
  },
  ingredientsContainer: {
    display: 'inline-block',
    margin: '10px 20px'
  },
  default: {
    fontFamily: "'Grand Hotel', cursive",
    color: 'black',
    fontSize: '3em'
  },
  header: {
    lineHeight: '100%',
    color: 'white',
    fontSize: '2em',
    background: '#16f9ae',
    padding: '5px',
    marginTop: '10px',
    fontFamily: "'Coiny', cursive",
    cursor: 'pointer',
    outline: 'none'
  },
  icon: {
    marginTop: '-45px',
    marginRight: '10px',
    float: 'right',
    display: 'block',
    color: 'red'
  }
};

var color1 = 'rgb(255, 179, 71)';
var color2 = 'rgb(255, 204, 51)';
var background = (_background = {
  background: color1
}, _defineProperty(_background, 'background', 'webkit-linear-gradient(to left, ' + color1 + ' , ' + color2 + ')'), _defineProperty(_background, 'background', 'linear-gradient(to left, ' + color1 + ' , ' + color2 + ')'), _background);

var _ref2 = _jsx('br', {});

var Recipes = function Recipes(_ref) {
  var recipes = _ref.recipes,
      collapse = _ref.collapse,
      expand = _ref.expand,
      deleteRecipe = _ref.deleteRecipe,
      editRecipe = _ref.editRecipe;

  var clickHandler = function clickHandler(i) {
    recipes[i]['expanded'] === false ? collapse(i) : expand(i);
  };
  return _jsx('div', {}, void 0, _jsx('h4', {
    style: styles.default
  }, void 0, 'Default Recipes: '), recipes.map(function (recipe, i) {
    return _jsx('div', {
      style: styles.container
    }, 'container' + recipe.title, _jsx('h4', {
      value: i,
      onClick: clickHandler.bind(_this, i),
      style: [styles.header, background]
    }, 'header' + recipe.title, recipe.title), _jsx('i', {
      style: styles.icon,
      className: 'fa fa-times fa-2x',
      'aria-hidden': 'true',
      onClick: function onClick() {
        return deleteRecipe(recipe.title);
      }
    }, void 0), _ref2, _jsx(Collapse, {
      isOpened: recipe.expanded
    }, 'collapse' + recipe.title, _jsx('div', {
      style: styles.ingredientsContainer
    }, 'container' + recipe.title, _jsx(EditRecipe, {
      editRecipe: editRecipe,
      recipe: recipe,
      index: i
    }), _jsx('table', {
      className: 'table table-hover',
      id: 'table' + recipe.title
    }, 'table' + recipe.title, _jsx('thead', {}, 'tablehead' + recipe.title, _jsx('tr', {}, 'tablerow' + recipe.title, _jsx('th', {}, 'measure' + recipe.title, 'Ingredients'), _jsx('th', {}, 'ingredient' + recipe.title, 'Measurements'))), _jsx('tbody', {}, 'tablebody' + recipe.title, recipe.ingredients.map(function (ingredient, i) {
      return _jsx('tr', {
        className: i % 2 === 0 ? "table-info" : ""
      }, 'row' + i + recipe.title, _jsx('td', {}, recipe.title + ingredient.name, ingredient.name), _jsx('td', {}, recipe.title + ingredient.measurement, ingredient.measurement));
    }))))));
  }));
};

export default Recipes = Radium(Recipes);