var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

import React from 'react';
import Radium from 'radium';

var styles = {
  container: {
    display: 'flex',
    flexDirection: 'column',
    marginRight: '15px'
  },
  header: {
    margin: '5px',
    cursor: 'pointer',
    fontFamily: '"Grand Hotel", cursive'
  },
  button: {
    margin: '5px',
    cursor: 'pointer',
    display: 'block'
  }
};

var Speeds = function Speeds(_ref) {
  var setSpeed = _ref.setSpeed;

  return _jsx('div', {
    style: styles.container
  }, void 0, _jsx('h2', {
    style: styles.header
  }, void 0, 'Speeds'), _jsx('button', {
    style: styles.button,
    className: 'btn btn-info',
    onClick: function onClick() {
      return setSpeed(1000);
    }
  }, void 0, 'Slow'), _jsx('button', {
    style: styles.button,
    className: 'btn btn-info',
    onClick: function onClick() {
      return setSpeed(100);
    }
  }, void 0, 'Medium'), _jsx('button', {
    style: styles.button,
    className: 'btn btn-info',
    onClick: function onClick() {
      return setSpeed(50);
    }
  }, void 0, 'Fast'));
};

export default Speeds = Radium(Speeds);