var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import { Button, Icon } from 'components/atoms';
import PropTypes from 'prop-types';
import React from 'react';
import styled, { css, keyframes } from 'styled-components';
import { ifProp, prop } from 'styled-tools';

var fadeIn = keyframes(['0%{display:none;opacity:0;}1%{display:block:opacity:0;}100%{display:block;opacity:1;}']);

var StyledButton = styled(Button).withConfig({
  displayName: 'IconButton__StyledButton'
})(['max-width:', ';width:', ';padding:', ';flex:0 0 2.5em;box-sizing:border-box;', ' ', ';'], function (props) {
  return props.hasText && !props.collapsed ? '100%' : '2.5em';
}, ifProp('hasText', 'auto', '2.5em'), ifProp('hasText', '0 0.4375em', 0), ifProp('collapsed', css(['overflow:hidden;transition:max-width 250ms ease-in-out;will-change:max-width;& .text{display:none;}&:hover{max-width:100%;& .text{display:block;animation:', ' 250ms;}}'], fadeIn)), ifProp('responsive', css(['@media screen and (max-width:', 'px){width:auto;flex:0 !important;}'], prop('breakpoint'))));

var Text = styled.span.withConfig({
  displayName: 'IconButton__Text'
})(['padding:0.4375em;@media screen and (max-width:', 'px){display:', ';}'], prop('breakpoint'), ifProp('responsive', 'none !important'));

var Wrapper = styled.div.withConfig({
  displayName: 'IconButton__Wrapper'
})(['display:flex;align-items:center;justify-content:center;width:100%;height:100%;']);

var StyledIcon = styled(Icon).withConfig({
  displayName: 'IconButton__StyledIcon'
})(['flex:none;']);

var IconButton = function IconButton(_ref) {
  var icon = _ref.icon,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['icon', 'children']);

  var breakpoint = props.breakpoint,
      right = props.right,
      responsive = props.responsive,
      height = props.height;

  var iconElement = React.createElement(StyledIcon, { height: height / 2.5, icon: icon });
  return React.createElement(
    StyledButton,
    _extends({ hasText: !!children }, props),
    React.createElement(
      Wrapper,
      null,
      right || iconElement,
      children && React.createElement(
        Text,
        {
          className: 'text',
          responsive: responsive,
          breakpoint: breakpoint
        },
        children
      ),
      right && iconElement
    )
  );
};

IconButton.propTypes = {
  icon: PropTypes.string.isRequired,
  responsive: PropTypes.bool,
  breakpoint: PropTypes.number,
  collapsed: PropTypes.bool,
  right: PropTypes.bool,
  height: PropTypes.number,
  children: PropTypes.node
};

IconButton.defaultProps = {
  breakpoint: 420
};

var _default = IconButton;
export default _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(fadeIn, 'fadeIn', '/home/ryan/dev/port/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(StyledButton, 'StyledButton', '/home/ryan/dev/port/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(Text, 'Text', '/home/ryan/dev/port/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(Wrapper, 'Wrapper', '/home/ryan/dev/port/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(StyledIcon, 'StyledIcon', '/home/ryan/dev/port/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(IconButton, 'IconButton', '/home/ryan/dev/port/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(_default, 'default', '/home/ryan/dev/port/src/components/molecules/IconButton/index.js');
}();

;