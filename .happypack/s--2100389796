'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _QuoteDetail = require('./QuoteDetail');

var _QuoteDetail2 = _interopRequireDefault(_QuoteDetail);

var _PumpBtn = require('./PumpBtn');

var _PumpBtn2 = _interopRequireDefault(_PumpBtn);

var _Tweet = require('./Tweet');

var _Tweet2 = _interopRequireDefault(_Tweet);

var _fetchQuote = require('../../../actions/fetchQuote');

var _reactRedux = require('react-redux');

var _redux = require('redux');

require('./style.css');

var _scroll = require('../../../helpers/scroll');

var _scroll2 = _interopRequireDefault(_scroll);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import urls from './img_urls'


var Quote = function (_Component) {
	_inherits(Quote, _Component);

	function Quote() {
		_classCallCheck(this, Quote);

		return _possibleConstructorReturn(this, (Quote.__proto__ || Object.getPrototypeOf(Quote)).apply(this, arguments));
	}

	_createClass(Quote, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			(0, _scroll2.default)(document.getElementById("quoteContainer"));
		}
	}, {
		key: 'render',
		value: function render() {
			return _jsx('div', {
				style: { marginBottom: '250px' },
				id: 'quoteContainer'
			}, void 0, _jsx('div', {
				className: 'container text-center'
			}, void 0, _jsx(_PumpBtn2.default, {
				fetch: this.props.fetchQuote
			}), _jsx(_Tweet2.default, {
				quote: this.props.quote
			}), _jsx(_QuoteDetail2.default, {
				quote: this.props.quote
			})));
		}
	}]);

	return Quote;
}(_react.Component);

function mapStateToProps(state) {
	return {
		quote: state.quote.quote
	};
}

function mapDispatchToProps(dispatch) {
	return (0, _redux.bindActionCreators)({ fetchQuote: _fetchQuote.fetchQuote }, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Quote);