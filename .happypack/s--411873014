var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

import React from 'react';
import Radium from 'radium';

var styles = {
  btn: {
    cursor: 'pointer',
    background: '#bf2303',
    width: '4.7%',
    height: '5.2%',
    borderRadius: '50%',
    outlineStyle: 'none',
    position: 'absolute',
    border: '1px solid #4f4f4f',
    boxShadow: '1px 1px 2px #4f4f4f',
    top: '46.5%',
    left: '48.8%',
    transition: 'all ease 0.3s',
    ':active': {
      outlineStyle: 'none',
      boxShadow: 'inset 0px 0px 4px #7c1400'
    }
  },
  text: {
    position: 'absolute',
    top: '52%',
    left: '47.3%',
    fontSize: '70%',
    color: 'black'
  }
};

var Start = function Start(_ref) {
  var start = _ref.start,
      round = _ref.round;

  return _jsx('div', {}, void 0, _jsx('button', {
    onClick: function onClick() {
      return start(round);
    },
    style: styles.btn
  }), _jsx('p', {
    style: styles.text
  }, void 0, 'start'));
};

export default Start = Radium(Start);